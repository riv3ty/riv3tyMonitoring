name: Docker Build and Publish

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  SERVER_IMAGE_NAME: ${{ github.repository }}
  AGENT_IMAGE_NAME: ${{ github.repository }}-agent

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push server image
      - name: Extract metadata for Server
        id: meta-server
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Server image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}

      # Build and push agent image
      - name: Extract metadata for Agent
        id: meta-agent
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.AGENT_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Agent image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.agent
          push: true
          tags: ${{ steps.meta-agent.outputs.tags }}
          labels: ${{ steps.meta-agent.outputs.labels }}
